env:
  DOCKER_REPO: apache/rocketmq-ci
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
jobs:
  clean:
    if: always()
    name: Clean
    needs:
    - list-version
    - java-grpc-e2e-test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: clean
      uses: apache/rocketmq-test-tool@1a646589accad17070423eabf0f54925e52b0666
      with:
        action: clean
        ask-config: ${{ secrets.ASK_CONFIG_VIRGINA }}
        job-id: ${{ strategy.job-index }}
        test-version: ${{ matrix.version }}
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    timeout-minutes: 60
  deploy-rocketmq:
    if: ${{ success() }}
    name: Deploy RocketMQ
    needs:
    - list-version
    - docker-build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Deploy rocketmq
      uses: apache/rocketmq-test-tool@1a646589accad17070423eabf0f54925e52b0666
      with:
        action: deploy
        ask-config: ${{ secrets.ASK_CONFIG_VIRGINA }}
        chart-branch: master
        chart-git: https://github.com/apache/rocketmq-docker.git
        chart-path: ./rocketmq-k8s-helm
        helm-values: "nameserver:\n  image:\n    repository: ${{env.DOCKER_REPO}}\n\
          \    tag: ${{ matrix.version }}\nbroker:\n  image:\n    repository: ${{env.DOCKER_REPO}}\n\
          \    tag: ${{ matrix.version }}\nproxy:\n  image:\n    repository: ${{env.DOCKER_REPO}}\n\
          \    tag: ${{ matrix.version }}\n"
        job-id: ${{ strategy.job-index }}
        test-version: ${{ matrix.version }}
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    timeout-minutes: 60
  dist-tar:
    if: github.repository == 'apache/rocketmq'
    name: Build dist tar
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: github.event.inputs.branch == '' && github.event.inputs.commit_id == ''
      name: Checkout develop
      uses: actions/checkout@v3
      with:
        ref: develop
    - continue-on-error: true
      if: github.event.inputs.branch == '' && github.event.inputs.commit_id != ''
      name: Checkout specific commit
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.commit_id }}
    - continue-on-error: true
      if: github.event.inputs.branch != '' && github.event.inputs.commit_id == ''
      name: Checkout specific branch
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.branch }}
    - continue-on-error: true
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: temurin
        java-version: '8'
    - continue-on-error: true
      env:
        MAVEN_SETTINGS: ${{ github.workspace }}/.github/asf-deploy-settings.xml
      name: Build distribution tar
      run: 'mvn -Prelease-all -DskipTests -Dspotbugs.skip=true clean install -U

        '
    - continue-on-error: true
      name: Upload distribution tar
      uses: actions/upload-artifact@v3
      with:
        name: rocketmq
        path: distribution/target/rocketmq*/rocketmq*
    timeout-minutes: 30
  docker-build:
    if: ${{ success() }}
    name: Docker images
    needs:
    - dist-tar
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        path: rocketmq-docker
        ref: master
        repository: apache/rocketmq-docker.git
    - continue-on-error: true
      name: Download distribution tar
      uses: actions/download-artifact@v3
      with:
        name: rocketmq
        path: rocketmq
    - continue-on-error: true
      name: docker-login
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USER }}
    - continue-on-error: true
      id: build-images
      name: Build and save docker images
      run: 'cd rocketmq-docker/image-build-ci

        version=${{ github.event.pull_request.number || github.ref_name }}-$(uuidgen)

        mkdir versionlist

        touch versionlist/"${version}-`echo ${{ matrix.base-image }} | sed -e "s/:/-/g"`"

        sh ./build-image-local.sh ${version} ${{ matrix.base-image }} ${{ matrix.java-version
        }} ${DOCKER_REPO}

        '
    - continue-on-error: true
      name: Upload distribution tar
      uses: actions/upload-artifact@v3
      with:
        name: versionlist
        path: rocketmq-docker/image-build-ci/versionlist/*
    strategy:
      matrix:
        base-image:
        - ubuntu
        java-version:
        - '8'
    timeout-minutes: 30
  java-grpc-e2e-test:
    if: ${{ success() }}
    name: E2E Test
    needs:
    - list-version
    - deploy-rocketmq
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: e2e test
      uses: apache/rocketmq-test-tool@1a646589accad17070423eabf0f54925e52b0666
      with:
        action: test
        ask-config: ${{ secrets.ASK_CONFIG_VIRGINA }}
        job-id: ${{ strategy.job-index }}
        test-cmd: mvn -B test
        test-code-branch: master
        test-code-git: https://github.com/apache/rocketmq-e2e.git
        test-code-path: java/e2e
        test-version: ${{ matrix.version }}
    - continue-on-error: true
      if: always()
      name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      with:
        annotate_only: true
        detailed_summary: true
        include_passed: true
        report_paths: '**/test_report/TEST-*.xml'
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: testlog.txt
        path: testlog.txt
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    timeout-minutes: 60
  list-version:
    if: always()
    name: List version
    needs:
    - docker-build
    outputs:
      version-json: ${{ steps.show_versions.outputs.version-json }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download versionlist
      uses: actions/download-artifact@v3
      with:
        name: versionlist
        path: versionlist
    - continue-on-error: true
      id: show_versions
      name: Show versions
      run: 'a=(`ls versionlist`)

        printf ''%s\n'' "${a[@]}" | jq -R . | jq -s .

        echo version-json=`printf ''%s\n'' "${a[@]}" | jq -R . | jq -s .` >> $GITHUB_OUTPUT

        '
    timeout-minutes: 30
  snapshot:
    env:
      NEXUS_DEPLOY_PASSWORD: ${{ secrets.NEXUS_PW }}
      NEXUS_DEPLOY_USERNAME: ${{ secrets.NEXUS_USER }}
    needs:
    - java-grpc-e2e-test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        ref: develop
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      if: github.event.inputs.rocketmq_version == ''
      name: Update default pom version
      run: 'VERSION=$(mvn -q -Dexec.executable=''echo'' -Dexec.args=''${project.version}''
        --non-recursive exec:exec)

        VERSION=$(echo $VERSION | awk -F ''-SNAPSHOT'' ''{print $1}'')

        VERSION=$VERSION-stable-SNAPSHOT

        mvn versions:set -DnewVersion=$VERSION

        '
    - continue-on-error: true
      if: github.event.inputs.rocketmq_version != ''
      name: Update User-defined pom version
      run: 'mvn versions:set -DnewVersion=${{ github.event.inputs.rocketmq_version
        }}

        '
    - continue-on-error: true
      name: Deploy to ASF Snapshots Repository
      run: mvn clean deploy -DskipTests=true --settings .github/asf-deploy-settings.xml
      timeout-minutes: 40
name: Snapshot Daily Release Automation
on:
  repository_dispatch:
    types: trigger-ga___snapshot-automation.yml
