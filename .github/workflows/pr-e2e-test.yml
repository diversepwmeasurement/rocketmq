env:
  DOCKER_REPO: apache/rocketmq-ci
jobs:
  clean:
    if: always()
    name: Clean
    needs:
    - list-version
    - test-e2e-grpc-java
    - test-e2e-golang
    - test-e2e-remoting-java
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: clean
      uses: apache/rocketmq-test-tool@7d84d276ad7755b1dc5cf9657a7a9bff6ae6d288
      with:
        action: clean
        ask-config: ${{ secrets.ASK_CONFIG_VIRGINA }}
        job-id: ${{ strategy.job-index }}
        test-version: ${{ matrix.version }}
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    timeout-minutes: 60
  deploy:
    if: ${{ success() }}
    name: Deploy RocketMQ
    needs:
    - list-version
    - docker
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Deploy rocketmq
      uses: apache/rocketmq-test-tool@7d84d276ad7755b1dc5cf9657a7a9bff6ae6d288
      with:
        action: deploy
        ask-config: ${{ secrets.ASK_CONFIG_VIRGINA }}
        chart-branch: master
        chart-git: https://ghproxy.com/https://github.com/apache/rocketmq-docker.git
        chart-path: ./rocketmq-k8s-helm
        helm-values: "nameserver:\n  image:\n    repository: ${{env.DOCKER_REPO}}\n\
          \    tag: ${{ matrix.version }}\nbroker:\n  image:\n    repository: ${{env.DOCKER_REPO}}\n\
          \    tag: ${{ matrix.version }}\nproxy:\n  image:\n    repository: ${{env.DOCKER_REPO}}\n\
          \    tag: ${{ matrix.version }}\n"
        job-id: ${{ strategy.job-index }}
        test-version: ${{ matrix.version }}
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    timeout-minutes: 60
  docker:
    if: 'github.repository == ''apache/rocketmq'' && github.event.workflow_run.event
      == ''pull_request'' && github.event.workflow_run.conclusion == ''success''

      '
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download artifact
      uses: actions/github-script@v3.1.0
      with:
        script: "var artifacts = await github.actions.listWorkflowRunArtifacts({\n\
          \   owner: context.repo.owner,\n   repo: context.repo.repo,\n   run_id:\
          \ ${{github.event.workflow_run.id }},\n});\nvar matchArtifactRmq = artifacts.data.artifacts.filter((artifact)\
          \ => {\n  return artifact.name == \"rocketmq\"\n})[0];\nvar download = await\
          \ github.actions.downloadArtifact({\n   owner: context.repo.owner,\n   repo:\
          \ context.repo.repo,\n   artifact_id: matchArtifactRmq.id,\n   archive_format:\
          \ 'zip',\n});\nvar fs = require('fs');\nfs.writeFileSync('${{github.workspace}}/rocketmq.zip',\
          \ Buffer.from(download.data));\n"
    - continue-on-error: true
      run: 'unzip rocketmq.zip

        mkdir rocketmq

        cp -r rocketmq-* rocketmq/

        ls

        '
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        path: rocketmq-docker
        ref: master
        repository: apache/rocketmq-docker.git
    - continue-on-error: true
      name: docker-login
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USER }}
    - continue-on-error: true
      id: build-images
      name: Build and save docker images
      run: 'cd rocketmq-docker/image-build-ci

        version=${{ github.event.pull_request.number || github.ref_name }}-$(uuidgen)

        mkdir versionlist

        touch versionlist/"${version}-`echo ${{ matrix.base-image }} | sed -e "s/:/-/g"`"

        sh ./build-image-local.sh ${version} ${{ matrix.base-image }} ${{ matrix.java-version
        }} ${DOCKER_REPO}

        '
    - continue-on-error: true
      name: Upload distribution tar
      uses: actions/upload-artifact@v3
      with:
        name: versionlist
        path: rocketmq-docker/image-build-ci/versionlist/*
    strategy:
      matrix:
        base-image:
        - ubuntu
        java-version:
        - '8'
    timeout-minutes: 30
  list-version:
    if: 'github.repository == ''apache/rocketmq'' && always()

      '
    name: List version
    needs:
    - docker
    outputs:
      version-json: ${{ steps.show_versions.outputs.version-json }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Download versionlist
      uses: actions/download-artifact@v3
      with:
        name: versionlist
        path: versionlist
    - continue-on-error: true
      id: show_versions
      name: Show versions
      run: 'a=(`ls versionlist`)

        printf ''%s\n'' "${a[@]}" | jq -R . | jq -s .

        echo version-json=`printf ''%s\n'' "${a[@]}" | jq -R . | jq -s .` >> $GITHUB_OUTPUT

        '
    timeout-minutes: 30
  test-e2e-golang:
    if: ${{ success() }}
    name: Test E2E golang
    needs:
    - list-version
    - deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: e2e test
      uses: apache/rocketmq-test-tool@7d84d276ad7755b1dc5cf9657a7a9bff6ae6d288
      with:
        action: test
        ask-config: ${{ secrets.ASK_CONFIG_VIRGINA }}
        job-id: 0
        test-cmd: 'cd ../common &&  mvn -Prelease -DskipTests clean package -U

          cd ../rocketmq-admintools && source bin/env.sh

          cd ../golang && go get -u github.com/apache/rocketmq-clients/golang && gotestsum
          --junitfile ./target/surefire-reports/TEST-report.xml ./mqgotest/... -timeout
          2m  -v

          '
        test-code-branch: master
        test-code-git: https://ghproxy.com/https://github.com/apache/rocketmq-e2e
        test-code-path: golang
        test-version: ${{ matrix.version }}
    - continue-on-error: true
      if: always()
      name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      with:
        annotate_only: true
        detailed_summary: true
        include_passed: true
        report_paths: '**/test_report/TEST-*.xml'
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: test-e2e-golang-log.txt
        path: testlog.txt
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    timeout-minutes: 60
  test-e2e-grpc-java:
    if: ${{ success() }}
    name: Test E2E grpc java
    needs:
    - list-version
    - deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: e2e test
      uses: apache/rocketmq-test-tool@7d84d276ad7755b1dc5cf9657a7a9bff6ae6d288
      with:
        action: test
        ask-config: ${{ secrets.ASK_CONFIG_VIRGINA }}
        job-id: 0
        test-cmd: mvn -B test
        test-code-branch: master
        test-code-git: https://ghproxy.com/https://github.com/apache/rocketmq-e2e
        test-code-path: java/e2e
        test-version: ${{ matrix.version }}
    - continue-on-error: true
      if: always()
      name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      with:
        annotate_only: true
        detailed_summary: true
        include_passed: true
        report_paths: '**/test_report/TEST-*.xml'
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: test-e2e-grpc-java-log.txt
        path: testlog.txt
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    timeout-minutes: 60
  test-e2e-remoting-java:
    if: ${{ success() }}
    name: Test E2E remoting java
    needs:
    - list-version
    - deploy
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: e2e test
      uses: apache/rocketmq-test-tool@7d84d276ad7755b1dc5cf9657a7a9bff6ae6d288
      with:
        action: test
        ask-config: ${{ secrets.ASK_CONFIG_VIRGINA }}
        job-id: 0
        test-cmd: mvn -B test
        test-code-branch: master
        test-code-git: https://ghproxy.com/https://github.com/apache/rocketmq-e2e
        test-code-path: java/e2e-v4
        test-version: ${{ matrix.version }}
    - continue-on-error: true
      if: always()
      name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      with:
        annotate_only: true
        detailed_summary: true
        include_passed: true
        report_paths: '**/test_report/TEST-*.xml'
    - continue-on-error: true
      if: always()
      name: Upload test log
      uses: actions/upload-artifact@v3
      with:
        name: test-e2e-remoting-java-log.txt
        path: testlog.txt
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    timeout-minutes: 60
name: E2E test for pull request
on:
  repository_dispatch:
    types: trigger-ga___pr-e2e-test.yml
